package Menu;

import java.awt.EventQueue;

import javax.swing.JFrame;
import javax.swing.JTextPane;

import Main.Main;
import Payment.Booking;
import User.Customer;
import User.Gold;
import User.Platinum;
import User.Silver;
import User.Stylist;
import User.User;

import javax.swing.JList;
import javax.swing.JOptionPane;
import javax.swing.AbstractListModel;
import javax.swing.JButton;
import javax.swing.JLabel;
import java.awt.event.ActionListener;
import java.io.File;
import java.io.IOException;
import java.io.PrintWriter;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.awt.event.ActionEvent;
import javax.swing.JTextField;
import java.awt.Font;
import javax.swing.JPanel;
import java.awt.Color;

public class manageMenu {
	JLabel lblRole = new JLabel("Role:");
	private JLabel labelRole = new JLabel("empty");
	private JFrame manageFrame;
	private User currUser = new User("","","","");
	private JTextField dateShowTF;
	DateFormat dateFormat = new SimpleDateFormat("EEEE , dd/MM/YYYY");
	Date date = new Date();
	Calendar calendar = Calendar.getInstance();
	private JTextField saldoTF;

	public manageMenu(User currUser) {
		super();
		this.currUser = currUser;
		initialize();
		
		System.out.println(currUser.getClass());
		lblRole.setVisible(true);
		if(currUser instanceof Stylist)
		{	
			labelRole.setText("Stylist");
		}
		
		else if (currUser instanceof Customer)
		{
			labelRole.setText("Regular Customer");
		}
		
		else if(currUser instanceof Silver)
		{
			labelRole.setText("Premium Silver");
		}
		
		else if(currUser instanceof Gold)
		{
			labelRole.setText("Premium Gold");
		}
		
		else if(currUser instanceof Platinum)
		{
			labelRole.setText("Premium Platinum");
		}
		
		else
		{
			labelRole.setText("None");
		}
		labelRole.setVisible(true);
	}
	
	private void initialize() {
		manageFrame = new JFrame();
		manageFrame.setTitle("SALMA - Manage Menu");
		manageFrame.setBounds(100, 100, 748, 559);
		manageFrame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		manageFrame.getContentPane().setLayout(null);
		
		JButton btnNewButton = new JButton("Make a booking");
		btnNewButton.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent arg0) {
				manageFrame.dispose();
				new makeBooking(currUser);
			}
		});
		btnNewButton.setBounds(273, 190, 167, 65);
		manageFrame.getContentPane().add(btnNewButton);
		
		JLabel labelNama = new JLabel("Nama:");
		labelNama.setBounds(42, 35, 56, 16);
		manageFrame.getContentPane().add(labelNama);
		
		JLabel labelEmail = new JLabel("Email:");
		labelEmail.setBounds(42, 64, 56, 16);
		manageFrame.getContentPane().add(labelEmail);
		
		JLabel lblUuid = new JLabel("UUID:");
		lblUuid.setBounds(42, 96, 56, 16);
		manageFrame.getContentPane().add(lblUuid);
		
		JLabel labelNamaUser = new JLabel(currUser.getNama());
		labelNamaUser.setBounds(110, 35, 500, 16);
		manageFrame.getContentPane().add(labelNamaUser);
		
		JLabel labelEmailUser = new JLabel(currUser.getEmail());
		labelEmailUser.setBounds(110, 64, 500, 16);
		manageFrame.getContentPane().add(labelEmailUser);
		
		JLabel labelUUIDUser = new JLabel(currUser.getUUID());
		labelUUIDUser.setBounds(110, 96, 500, 16);
		manageFrame.getContentPane().add(labelUUIDUser);
		
		JButton buttonBackToMainMenu = new JButton("Back to Main Menu");
		buttonBackToMainMenu.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent arg0) {
				manageFrame.dispose();
				new MainMenu();
			}
		});
		buttonBackToMainMenu.setBounds(42, 444, 167, 65);
		manageFrame.getContentPane().add(buttonBackToMainMenu);
		
		JButton editButton = new JButton("Edit a booking");
		editButton.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				
			}
		});
		editButton.setBounds(273, 266, 167, 65);
		manageFrame.getContentPane().add(editButton);
		
		JButton btnViewBookings = new JButton("View bookings");
		btnViewBookings.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent arg0) {
				manageFrame.dispose();
				new viewBookings(currUser);
			}
		});
		btnViewBookings.setBounds(273, 342, 167, 65);
		manageFrame.getContentPane().add(btnViewBookings);
		
		
		dateShowTF = new JTextField();
		dateShowTF.setFont(new Font("Century Gothic", Font.PLAIN, 18));
		dateShowTF.setBounds(393, 25, 329, 29);
		manageFrame.getContentPane().add(dateShowTF);
		dateShowTF.setColumns(10);
		dateShowTF.setText("Today's date: " + " " + dateFormat.format(date));
		dateShowTF.setEditable(false);
		
		
		lblRole.setBounds(42, 129, 56, 16);
		manageFrame.getContentPane().add(lblRole);
		
		lblRole.setVisible(false);
		labelRole.setVisible(false);
		labelRole.setBounds(110, 129, 500, 16);
		manageFrame.getContentPane().add(labelRole);
		
		JLabel lblCurrentSaldo = new JLabel("Current Saldo:");
		lblCurrentSaldo.setBounds(564, 469, 92, 14);
		manageFrame.getContentPane().add(lblCurrentSaldo);
		
		saldoTF = new JTextField();
		saldoTF.setBounds(574, 489, 113, 20);
		manageFrame.getContentPane().add(saldoTF);
		saldoTF.setColumns(10);
		saldoTF.setEditable(false);
		
		JButton btnTopUpNow = new JButton("Top Up Now!");
		btnTopUpNow.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent arg0) {
				
			}
		});
		btnTopUpNow.setBounds(440, 486, 106, 23);
		manageFrame.getContentPane().add(btnTopUpNow);
		
		JButton btnUpgradeNow = new JButton("Upgrade Now!");
		btnUpgradeNow.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent arg0) {
				String upgradeTo = new String("");
				if(currUser instanceof Customer){
					upgradeTo = "Silver";
					Silver upgradeSilver = new Silver((Customer)currUser);
					Main.userdata.set(Main.userdata.indexOf(currUser), upgradeSilver);
				} else if(currUser instanceof Silver){
					upgradeTo = "Gold";
					Gold upgradeGold = new Gold((Customer)currUser);
					Main.userdata.set(Main.userdata.indexOf(currUser), upgradeGold);
				} else if(currUser instanceof Gold){
					upgradeTo = "Platinum";
					Platinum upgradePlatinum = new Platinum((Customer)currUser);
					Main.userdata.set(Main.userdata.indexOf(currUser), upgradePlatinum);
				}
				JOptionPane.showMessageDialog(null, "Congratulation! Upgrade to " + upgradeTo + " success!");
			}
		});
		btnUpgradeNow.setBounds(567, 287, 120, 23);
		btnUpgradeNow.setVisible(false);
		manageFrame.getContentPane().add(btnUpgradeNow);
		
		JLabel lblUpgradeTo = new JLabel("Upgrade to:");
		lblUpgradeTo.setBounds(564, 262, 67, 14);
		lblUpgradeTo.setVisible(false);
		manageFrame.getContentPane().add(lblUpgradeTo);
		
		JLabel lblType = new JLabel("type");
		lblType.setBounds(641, 262, 46, 14);
		if(currUser instanceof Customer){
			lblType.setText("Silver");
		} else if(currUser instanceof Silver){
			lblType.setText("Gold");
		} else if(currUser instanceof Gold){
			lblType.setText("Platinum");
		}
		lblType.setVisible(false);
		manageFrame.getContentPane().add(lblType);
		
		JPanel upgradeGroup = new JPanel();
		upgradeGroup.setBackground(Color.LIGHT_GRAY);
		upgradeGroup.setBounds(538, 245, 179, 86);
		upgradeGroup.setVisible(false);
		manageFrame.getContentPane().add(upgradeGroup);
		
		if(((Customer)currUser).getnTransaksi() > 5 && (currUser instanceof Customer || currUser instanceof Silver || currUser instanceof Gold)){
			lblUpgradeTo.setVisible(true);
			lblType.setVisible(true);
			upgradeGroup.setVisible(true);
		}
		
		JLabel lblTransactions = new JLabel("Transactions:");
		lblTransactions.setBounds(42, 158, 74, 14);
		lblTransactions.setVisible(false);
		manageFrame.getContentPane().add(lblTransactions);
		
		JLabel labelTransactionInfo = new JLabel((String) null);
		labelTransactionInfo.setBounds(120, 156, 500, 16);
		labelTransactionInfo.setText("" + ((Customer)currUser).getnTransaksi());
		labelTransactionInfo.setVisible(false);
		manageFrame.getContentPane().add(labelTransactionInfo);
		if(!(currUser instanceof Stylist)){
			saldoTF.setVisible(true);
			saldoTF.setText(((Customer)currUser).getSaldo().toString());
			lblTransactions.setVisible(true);
			labelTransactionInfo.setVisible(true);
		}
		
		manageFrame.setResizable(false);
		manageFrame.setVisible(true);
		
	}
}
